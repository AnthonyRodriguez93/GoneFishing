{"version":3,"sources":["reportWebVitals.js","App.js","App2.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","state","loading","weather","a","auth","Headers","append","requestOptions","method","headers","redirect","fetch","response","json","data","this","setState","hours","console","log","className","waveHeight","noaa","airTemperature","pressure","waterTemperature","humidity","Component","App2","ReactDOM","render","document","getElementById"],"mappings":"kKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kEC8CCQ,E,4MA/CXC,MAAQ,CACJC,SAAS,EACTC,QAAS,M,8FAGjB,kCAAAC,EAAA,4DACgB,iJACRC,EAAQ,IAAIC,SACXC,OAAO,gBAAiB,6EAEvBC,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UARlB,SAW2BC,MAVX,gJAUsBJ,GAXtC,cAWUK,EAXV,gBAYuBA,EAASC,OAZhC,OAYUC,EAZV,OAaIC,KAAKC,SAAS,CAAEd,QAASY,EAAKG,MAAM,GAAIhB,SAAS,IACjDiB,QAAQC,IAAI,CAACjB,QAASY,EAAKG,MAAM,KAdrC,iD,0EAiBA,WACI,OACI,8BACI,qBAAKG,UAAU,sDAAf,SACCL,KAAKf,MAAMC,UAAYc,KAAKf,MAAME,QAC/B,6CAEA,gCACI,0CACA,+CAAkBa,KAAKf,MAAME,QAAQmB,WAAWC,KAAhD,cACA,mDAAsBP,KAAKf,MAAME,QAAQqB,eAAeD,KAAxD,WACA,4CAAeP,KAAKf,MAAME,QAAQsB,SAASF,KAA3C,SACA,qDAAwBP,KAAKf,MAAME,QAAQuB,iBAAiBH,KAA5D,WACA,4CAAeP,KAAKf,MAAME,QAAQwB,SAASJ,KAA3C,qC,GAtCFK,aCmDHC,E,4MAhDX5B,MAAQ,CACJC,SAAS,EACTC,QAAS,M,8FAIjB,kCAAAC,EAAA,4DACgB,+JACRC,EAAQ,IAAIC,SACXC,OAAO,gBAAiB,6EAEvBC,EAAiB,CACnBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UARlB,SAW2BC,MAVX,8JAUsBJ,GAXtC,cAWUK,EAXV,gBAYuBA,EAASC,OAZhC,OAYUC,EAZV,OAaIC,KAAKC,SAAS,CAAEd,QAASY,EAAKG,MAAM,GAAIhB,SAAS,IACjDiB,QAAQC,IAAI,CAACjB,QAASY,EAAKG,MAAM,KAdrC,iD,0EAiBA,WACI,OACI,8BACI,qBAAKG,UAAU,sDAAf,SACCL,KAAKf,MAAMC,UAAYc,KAAKf,MAAME,QAC/B,6CAEA,gCACI,+CACA,+CAAkBa,KAAKf,MAAME,QAAQmB,WAAWC,KAAhD,cACA,mDAAsBP,KAAKf,MAAME,QAAQqB,eAAeD,KAAxD,WACA,4CAAeP,KAAKf,MAAME,QAAQsB,SAASF,KAA3C,SACA,qDAAwBP,KAAKf,MAAME,QAAQuB,iBAAiBH,KAA5D,WACA,4CAAeP,KAAKf,MAAME,QAAQwB,SAASJ,KAA3C,qC,GAvCDK,aCQnBE,IAASC,OACT,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEHC,SAASC,eAAe,SAMzB1C,M","file":"static/js/main.675c3892.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n    state = {\r\n        loading: true,\r\n        weather: null,\r\n    };\r\n\r\nasync componentDidMount() {\r\n    const url = 'https://api.stormglass.io/v2/weather/point?lat=28.6908222&lng=-95.9674625&params=waveHeight,airTemperature,pressure,waterTemperature,humidity';\r\n    let auth =  new Headers();\r\n    auth.append(\"Authorization\", \"d5d4d330-abea-11eb-9f40-0242ac130002-d5d4d3d0-abea-11eb-9f40-0242ac130002\");\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: auth,\r\n        redirect: 'follow'\r\n    }\r\n    \r\n    const response = await fetch(url, requestOptions);\r\n    const data = await response.json();\r\n    this.setState({ weather: data.hours[0], loading: false });\r\n    console.log({weather: data.hours[0]})\r\n};\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n            {this.state.loading || !this.state.weather ? (\r\n                <div>loading...</div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Palacios</h1>\r\n                    <h1>Wave Height: {this.state.weather.waveHeight.noaa} Meter/s</h1>\r\n                    <h1>Air Temperature: {this.state.weather.airTemperature.noaa}째C</h1>\r\n                    <h1>Pressure: {this.state.weather.pressure.noaa} mb</h1>\r\n                    <h1>Water Temperature: {this.state.weather.waterTemperature.noaa}째C</h1>\r\n                    <h1>Humidity: {this.state.weather.humidity.noaa} % Relative Humidity</h1>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>    \r\n    );\r\n}}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\n\r\nclass App2 extends Component {\r\n\r\n\r\n    state = {\r\n        loading: true,\r\n        weather: null,\r\n    };\r\n\r\n\r\nasync componentDidMount() {\r\n    const url = 'https://api.stormglass.io/v2/weather/point?lat=29.05878804877405&lng=-95.19013748885546&params=waveHeight,airTemperature,pressure,waterTemperature,humidity';\r\n    let auth =  new Headers();\r\n    auth.append(\"Authorization\", \"d5d4d330-abea-11eb-9f40-0242ac130002-d5d4d3d0-abea-11eb-9f40-0242ac130002\");\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: auth,\r\n        redirect: 'follow'\r\n    }\r\n    \r\n    const response = await fetch(url, requestOptions);\r\n    const data = await response.json();\r\n    this.setState({ weather: data.hours[0], loading: false });\r\n    console.log({weather: data.hours[0]})\r\n};\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\r\n            {this.state.loading || !this.state.weather ? (\r\n                <div>loading...</div>\r\n            ) : (\r\n                <div>\r\n                    <h1>Christmas Bay</h1>\r\n                    <h1>Wave Height: {this.state.weather.waveHeight.noaa} Meter/s</h1>\r\n                    <h1>Air Temperature: {this.state.weather.airTemperature.noaa}째C</h1>\r\n                    <h1>Pressure: {this.state.weather.pressure.noaa} mb</h1>\r\n                    <h1>Water Temperature: {this.state.weather.waterTemperature.noaa}째C</h1>\r\n                    <h1>Humidity: {this.state.weather.humidity.noaa} % Relative Humidity</h1>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>    \r\n    );\r\n}}\r\n\r\n\r\n\r\n\r\n\r\nexport default App2;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\nimport App2 from './App2';\n\n\n\n\nReactDOM.render( \n<div>\n    <App />\n    <App2 />\n</div>\n,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}